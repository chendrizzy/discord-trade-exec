{
	"@programName": "ZAP",
	"@version": "2.16.1",
	"@generated": "Tue, 28 Oct 2025 13:25:36",
	"created": "2025-10-28T13:25:36.411736180Z",
	"site":[ 
		{
			"@name": "http://localhost:5001",
			"@host": "localhost",
			"@port": "5001",
			"@ssl": "false",
			"alerts": [ 
				{
					"pluginid": "10055",
					"alertRef": "10055-4",
					"alert": "CSP: Wildcard Directive",
					"name": "CSP: Wildcard Directive",
					"riskcode": "2",
					"confidence": "3",
					"riskdesc": "Medium (High)",
					"desc": "<p>Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks. Including (but not limited to) Cross Site Scripting (XSS), and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.</p>",
					"instances":[ 
						{
							"id": "0",
							"uri": "http://localhost:5001",
							"method": "GET",
							"param": "Content-Security-Policy",
							"attack": "",
							"evidence": "default-src 'self';style-src 'self' 'unsafe-inline' https://fonts.googleapis.com;script-src 'self' 'unsafe-inline';img-src 'self' data: https://cdn.discordapp.com;connect-src 'self' ws: wss: https://discord.com;font-src 'self' https://fonts.gstatic.com;object-src 'none';media-src 'self';frame-src 'none';base-uri 'self';form-action 'self';frame-ancestors 'self';script-src-attr 'none';upgrade-insecure-requests",
							"otherinfo": "The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined:\nconnect-src"
						},
						{
							"id": "2",
							"uri": "http://localhost:5001/robots.txt",
							"method": "GET",
							"param": "Content-Security-Policy",
							"attack": "",
							"evidence": "default-src 'self';style-src 'self' 'unsafe-inline' https://fonts.googleapis.com;script-src 'self' 'unsafe-inline';img-src 'self' data: https://cdn.discordapp.com;connect-src 'self' ws: wss: https://discord.com;font-src 'self' https://fonts.gstatic.com;object-src 'none';media-src 'self';frame-src 'none';base-uri 'self';form-action 'self';frame-ancestors 'self';script-src-attr 'none';upgrade-insecure-requests",
							"otherinfo": "The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined:\nconnect-src"
						},
						{
							"id": "1",
							"uri": "http://localhost:5001/sitemap.xml",
							"method": "GET",
							"param": "Content-Security-Policy",
							"attack": "",
							"evidence": "default-src 'self';style-src 'self' 'unsafe-inline' https://fonts.googleapis.com;script-src 'self' 'unsafe-inline';img-src 'self' data: https://cdn.discordapp.com;connect-src 'self' ws: wss: https://discord.com;font-src 'self' https://fonts.gstatic.com;object-src 'none';media-src 'self';frame-src 'none';base-uri 'self';form-action 'self';frame-ancestors 'self';script-src-attr 'none';upgrade-insecure-requests",
							"otherinfo": "The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined:\nconnect-src"
						},
						{
							"id": "4",
							"uri": "http://localhost:5001/vite.svg",
							"method": "GET",
							"param": "Content-Security-Policy",
							"attack": "",
							"evidence": "default-src 'self';style-src 'self' 'unsafe-inline' https://fonts.googleapis.com;script-src 'self' 'unsafe-inline';img-src 'self' data: https://cdn.discordapp.com;connect-src 'self' ws: wss: https://discord.com;font-src 'self' https://fonts.gstatic.com;object-src 'none';media-src 'self';frame-src 'none';base-uri 'self';form-action 'self';frame-ancestors 'self';script-src-attr 'none';upgrade-insecure-requests",
							"otherinfo": "The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined:\nconnect-src"
						}
					],
					"count": "4",
					"solution": "<p>Ensure that your web server, application server, load balancer, etc. is properly configured to set the Content-Security-Policy header.</p>",
					"otherinfo": "<p>The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined:</p><p>connect-src</p>",
					"reference": "<p>https://www.w3.org/TR/CSP/</p><p>https://caniuse.com/#search=content+security+policy</p><p>https://content-security-policy.com/</p><p>https://github.com/HtmlUnit/htmlunit-csp</p><p>https://web.dev/articles/csp#resource-options</p>",
					"cweid": "693",
					"wascid": "15",
					"sourceid": "1"
				},
				{
					"pluginid": "10055",
					"alertRef": "10055-5",
					"alert": "CSP: script-src unsafe-inline",
					"name": "CSP: script-src unsafe-inline",
					"riskcode": "2",
					"confidence": "3",
					"riskdesc": "Medium (High)",
					"desc": "<p>Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks. Including (but not limited to) Cross Site Scripting (XSS), and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.</p>",
					"instances":[ 
						{
							"id": "5",
							"uri": "http://localhost:5001",
							"method": "GET",
							"param": "Content-Security-Policy",
							"attack": "",
							"evidence": "default-src 'self';style-src 'self' 'unsafe-inline' https://fonts.googleapis.com;script-src 'self' 'unsafe-inline';img-src 'self' data: https://cdn.discordapp.com;connect-src 'self' ws: wss: https://discord.com;font-src 'self' https://fonts.gstatic.com;object-src 'none';media-src 'self';frame-src 'none';base-uri 'self';form-action 'self';frame-ancestors 'self';script-src-attr 'none';upgrade-insecure-requests",
							"otherinfo": "script-src includes unsafe-inline."
						},
						{
							"id": "8",
							"uri": "http://localhost:5001/robots.txt",
							"method": "GET",
							"param": "Content-Security-Policy",
							"attack": "",
							"evidence": "default-src 'self';style-src 'self' 'unsafe-inline' https://fonts.googleapis.com;script-src 'self' 'unsafe-inline';img-src 'self' data: https://cdn.discordapp.com;connect-src 'self' ws: wss: https://discord.com;font-src 'self' https://fonts.gstatic.com;object-src 'none';media-src 'self';frame-src 'none';base-uri 'self';form-action 'self';frame-ancestors 'self';script-src-attr 'none';upgrade-insecure-requests",
							"otherinfo": "script-src includes unsafe-inline."
						},
						{
							"id": "12",
							"uri": "http://localhost:5001/sitemap.xml",
							"method": "GET",
							"param": "Content-Security-Policy",
							"attack": "",
							"evidence": "default-src 'self';style-src 'self' 'unsafe-inline' https://fonts.googleapis.com;script-src 'self' 'unsafe-inline';img-src 'self' data: https://cdn.discordapp.com;connect-src 'self' ws: wss: https://discord.com;font-src 'self' https://fonts.gstatic.com;object-src 'none';media-src 'self';frame-src 'none';base-uri 'self';form-action 'self';frame-ancestors 'self';script-src-attr 'none';upgrade-insecure-requests",
							"otherinfo": "script-src includes unsafe-inline."
						},
						{
							"id": "7",
							"uri": "http://localhost:5001/vite.svg",
							"method": "GET",
							"param": "Content-Security-Policy",
							"attack": "",
							"evidence": "default-src 'self';style-src 'self' 'unsafe-inline' https://fonts.googleapis.com;script-src 'self' 'unsafe-inline';img-src 'self' data: https://cdn.discordapp.com;connect-src 'self' ws: wss: https://discord.com;font-src 'self' https://fonts.gstatic.com;object-src 'none';media-src 'self';frame-src 'none';base-uri 'self';form-action 'self';frame-ancestors 'self';script-src-attr 'none';upgrade-insecure-requests",
							"otherinfo": "script-src includes unsafe-inline."
						}
					],
					"count": "4",
					"solution": "<p>Ensure that your web server, application server, load balancer, etc. is properly configured to set the Content-Security-Policy header.</p>",
					"otherinfo": "<p>script-src includes unsafe-inline.</p>",
					"reference": "<p>https://www.w3.org/TR/CSP/</p><p>https://caniuse.com/#search=content+security+policy</p><p>https://content-security-policy.com/</p><p>https://github.com/HtmlUnit/htmlunit-csp</p><p>https://web.dev/articles/csp#resource-options</p>",
					"cweid": "693",
					"wascid": "15",
					"sourceid": "6"
				},
				{
					"pluginid": "10055",
					"alertRef": "10055-6",
					"alert": "CSP: style-src unsafe-inline",
					"name": "CSP: style-src unsafe-inline",
					"riskcode": "2",
					"confidence": "3",
					"riskdesc": "Medium (High)",
					"desc": "<p>Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks. Including (but not limited to) Cross Site Scripting (XSS), and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.</p>",
					"instances":[ 
						{
							"id": "10",
							"uri": "http://localhost:5001",
							"method": "GET",
							"param": "Content-Security-Policy",
							"attack": "",
							"evidence": "default-src 'self';style-src 'self' 'unsafe-inline' https://fonts.googleapis.com;script-src 'self' 'unsafe-inline';img-src 'self' data: https://cdn.discordapp.com;connect-src 'self' ws: wss: https://discord.com;font-src 'self' https://fonts.gstatic.com;object-src 'none';media-src 'self';frame-src 'none';base-uri 'self';form-action 'self';frame-ancestors 'self';script-src-attr 'none';upgrade-insecure-requests",
							"otherinfo": "style-src includes unsafe-inline."
						},
						{
							"id": "11",
							"uri": "http://localhost:5001/robots.txt",
							"method": "GET",
							"param": "Content-Security-Policy",
							"attack": "",
							"evidence": "default-src 'self';style-src 'self' 'unsafe-inline' https://fonts.googleapis.com;script-src 'self' 'unsafe-inline';img-src 'self' data: https://cdn.discordapp.com;connect-src 'self' ws: wss: https://discord.com;font-src 'self' https://fonts.gstatic.com;object-src 'none';media-src 'self';frame-src 'none';base-uri 'self';form-action 'self';frame-ancestors 'self';script-src-attr 'none';upgrade-insecure-requests",
							"otherinfo": "style-src includes unsafe-inline."
						},
						{
							"id": "14",
							"uri": "http://localhost:5001/sitemap.xml",
							"method": "GET",
							"param": "Content-Security-Policy",
							"attack": "",
							"evidence": "default-src 'self';style-src 'self' 'unsafe-inline' https://fonts.googleapis.com;script-src 'self' 'unsafe-inline';img-src 'self' data: https://cdn.discordapp.com;connect-src 'self' ws: wss: https://discord.com;font-src 'self' https://fonts.gstatic.com;object-src 'none';media-src 'self';frame-src 'none';base-uri 'self';form-action 'self';frame-ancestors 'self';script-src-attr 'none';upgrade-insecure-requests",
							"otherinfo": "style-src includes unsafe-inline."
						},
						{
							"id": "9",
							"uri": "http://localhost:5001/vite.svg",
							"method": "GET",
							"param": "Content-Security-Policy",
							"attack": "",
							"evidence": "default-src 'self';style-src 'self' 'unsafe-inline' https://fonts.googleapis.com;script-src 'self' 'unsafe-inline';img-src 'self' data: https://cdn.discordapp.com;connect-src 'self' ws: wss: https://discord.com;font-src 'self' https://fonts.gstatic.com;object-src 'none';media-src 'self';frame-src 'none';base-uri 'self';form-action 'self';frame-ancestors 'self';script-src-attr 'none';upgrade-insecure-requests",
							"otherinfo": "style-src includes unsafe-inline."
						}
					],
					"count": "4",
					"solution": "<p>Ensure that your web server, application server, load balancer, etc. is properly configured to set the Content-Security-Policy header.</p>",
					"otherinfo": "<p>style-src includes unsafe-inline.</p>",
					"reference": "<p>https://www.w3.org/TR/CSP/</p><p>https://caniuse.com/#search=content+security+policy</p><p>https://content-security-policy.com/</p><p>https://github.com/HtmlUnit/htmlunit-csp</p><p>https://web.dev/articles/csp#resource-options</p>",
					"cweid": "693",
					"wascid": "15",
					"sourceid": "6"
				},
				{
					"pluginid": "90004",
					"alertRef": "90004-2",
					"alert": "Insufficient Site Isolation Against Spectre Vulnerability",
					"name": "Insufficient Site Isolation Against Spectre Vulnerability",
					"riskcode": "1",
					"confidence": "2",
					"riskdesc": "Low (Medium)",
					"desc": "<p>Cross-Origin-Embedder-Policy header is a response header that prevents a document from loading any cross-origin resources that don't explicitly grant the document permission (using CORP or CORS).</p>",
					"instances":[ 
						{
							"id": "27",
							"uri": "http://localhost:5001",
							"method": "GET",
							"param": "Cross-Origin-Embedder-Policy",
							"attack": "",
							"evidence": "",
							"otherinfo": ""
						},
						{
							"id": "35",
							"uri": "http://localhost:5001/robots.txt",
							"method": "GET",
							"param": "Cross-Origin-Embedder-Policy",
							"attack": "",
							"evidence": "",
							"otherinfo": ""
						},
						{
							"id": "22",
							"uri": "http://localhost:5001/sitemap.xml",
							"method": "GET",
							"param": "Cross-Origin-Embedder-Policy",
							"attack": "",
							"evidence": "",
							"otherinfo": ""
						},
						{
							"id": "29",
							"uri": "http://localhost:5001/vite.svg",
							"method": "GET",
							"param": "Cross-Origin-Embedder-Policy",
							"attack": "",
							"evidence": "",
							"otherinfo": ""
						}
					],
					"count": "4",
					"solution": "<p>Ensure that the application/web server sets the Cross-Origin-Embedder-Policy header appropriately, and that it sets the Cross-Origin-Embedder-Policy header to 'require-corp' for documents.</p><p>If possible, ensure that the end user uses a standards-compliant and modern web browser that supports the Cross-Origin-Embedder-Policy header (https://caniuse.com/mdn-http_headers_cross-origin-embedder-policy).</p>",
					"otherinfo": "",
					"reference": "<p>https://developer.mozilla.org/en-US/docs/Web/HTTP/Reference/Headers/Cross-Origin-Embedder-Policy</p>",
					"cweid": "693",
					"wascid": "14",
					"sourceid": "6"
				},
				{
					"pluginid": "10063",
					"alertRef": "10063-1",
					"alert": "Permissions Policy Header Not Set",
					"name": "Permissions Policy Header Not Set",
					"riskcode": "1",
					"confidence": "2",
					"riskdesc": "Low (Medium)",
					"desc": "<p>Permissions Policy Header is an added layer of security that helps to restrict from unauthorized access or usage of browser/client features by web resources. This policy ensures the user privacy by limiting or specifying the features of the browsers can be used by the web resources. Permissions Policy provides a set of standard HTTP headers that allow website owners to limit which features of browsers can be used by the page such as camera, microphone, location, full screen etc.</p>",
					"instances":[ 
						{
							"id": "24",
							"uri": "http://localhost:5001",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "",
							"otherinfo": ""
						},
						{
							"id": "38",
							"uri": "http://localhost:5001/assets/index-ByTRoRjA.js",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "",
							"otherinfo": ""
						},
						{
							"id": "34",
							"uri": "http://localhost:5001/robots.txt",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "",
							"otherinfo": ""
						},
						{
							"id": "21",
							"uri": "http://localhost:5001/sitemap.xml",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "",
							"otherinfo": ""
						},
						{
							"id": "28",
							"uri": "http://localhost:5001/vite.svg",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "",
							"otherinfo": ""
						}
					],
					"count": "5",
					"solution": "<p>Ensure that your web server, application server, load balancer, etc. is configured to set the Permissions-Policy header.</p>",
					"otherinfo": "",
					"reference": "<p>https://developer.mozilla.org/en-US/docs/Web/HTTP/Reference/Headers/Permissions-Policy</p><p>https://developer.chrome.com/blog/feature-policy/</p><p>https://scotthelme.co.uk/a-new-security-header-feature-policy/</p><p>https://w3c.github.io/webappsec-feature-policy/</p><p>https://www.smashingmagazine.com/2018/12/feature-policy/</p>",
					"cweid": "693",
					"wascid": "15",
					"sourceid": "6"
				},
				{
					"pluginid": "10027",
					"alertRef": "10027",
					"alert": "Information Disclosure - Suspicious Comments",
					"name": "Information Disclosure - Suspicious Comments",
					"riskcode": "0",
					"confidence": "1",
					"riskdesc": "Informational (Low)",
					"desc": "<p>The response appears to contain suspicious comments which may help an attacker.</p>",
					"instances":[ 
						{
							"id": "32",
							"uri": "http://localhost:5001/assets/index-ByTRoRjA.js",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "select",
							"otherinfo": "The following pattern was used: \\bSELECT\\b and was detected in likely comment: \"//www.w3.org/2000/svg\",i);break;case 2:o=f.createElementNS(\"http://www.w3.org/1998/Math/MathML\",i);break;default:switch(i){case\"\", see evidence field for the suspicious comment/snippet."
						}
					],
					"count": "1",
					"solution": "<p>Remove all comments that return information that may help an attacker and fix any underlying problems they refer to.</p>",
					"otherinfo": "<p>The following pattern was used: \\bSELECT\\b and was detected in likely comment: \"//www.w3.org/2000/svg\",i);break;case 2:o=f.createElementNS(\"http://www.w3.org/1998/Math/MathML\",i);break;default:switch(i){case\"\", see evidence field for the suspicious comment/snippet.</p>",
					"reference": "",
					"cweid": "615",
					"wascid": "13",
					"sourceid": "15"
				},
				{
					"pluginid": "10109",
					"alertRef": "10109",
					"alert": "Modern Web Application",
					"name": "Modern Web Application",
					"riskcode": "0",
					"confidence": "2",
					"riskdesc": "Informational (Medium)",
					"desc": "<p>The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.</p>",
					"instances":[ 
						{
							"id": "17",
							"uri": "http://localhost:5001",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "<script type=\"module\" crossorigin src=\"/assets/index-ByTRoRjA.js\"></script>",
							"otherinfo": "No links have been found while there are scripts, which is an indication that this is a modern web application."
						},
						{
							"id": "15",
							"uri": "http://localhost:5001/robots.txt",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "<script type=\"module\" crossorigin src=\"/assets/index-ByTRoRjA.js\"></script>",
							"otherinfo": "No links have been found while there are scripts, which is an indication that this is a modern web application."
						},
						{
							"id": "19",
							"uri": "http://localhost:5001/sitemap.xml",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "<script type=\"module\" crossorigin src=\"/assets/index-ByTRoRjA.js\"></script>",
							"otherinfo": "No links have been found while there are scripts, which is an indication that this is a modern web application."
						},
						{
							"id": "16",
							"uri": "http://localhost:5001/vite.svg",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "<script type=\"module\" crossorigin src=\"/assets/index-ByTRoRjA.js\"></script>",
							"otherinfo": "No links have been found while there are scripts, which is an indication that this is a modern web application."
						}
					],
					"count": "4",
					"solution": "<p>This is an informational alert and so no changes are required.</p>",
					"otherinfo": "<p>No links have been found while there are scripts, which is an indication that this is a modern web application.</p>",
					"reference": "",
					"cweid": "-1",
					"wascid": "-1",
					"sourceid": "1"
				},
				{
					"pluginid": "10049",
					"alertRef": "10049-2",
					"alert": "Storable but Non-Cacheable Content",
					"name": "Storable but Non-Cacheable Content",
					"riskcode": "0",
					"confidence": "2",
					"riskdesc": "Informational (Medium)",
					"desc": "<p>The response contents are storable by caching components such as proxy servers, but will not be retrieved directly from the cache, without validating the request upstream, in response to similar requests from other users.</p>",
					"instances":[ 
						{
							"id": "23",
							"uri": "http://localhost:5001",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "max-age=0",
							"otherinfo": ""
						},
						{
							"id": "37",
							"uri": "http://localhost:5001/assets/index-ByTRoRjA.js",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "max-age=0",
							"otherinfo": ""
						},
						{
							"id": "36",
							"uri": "http://localhost:5001/assets/index-Cik6Scr-.css",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "max-age=0",
							"otherinfo": ""
						},
						{
							"id": "33",
							"uri": "http://localhost:5001/robots.txt",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "max-age=0",
							"otherinfo": ""
						},
						{
							"id": "20",
							"uri": "http://localhost:5001/sitemap.xml",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "max-age=0",
							"otherinfo": ""
						},
						{
							"id": "25",
							"uri": "http://localhost:5001/vite.svg",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "max-age=0",
							"otherinfo": ""
						}
					],
					"count": "6",
					"solution": "",
					"otherinfo": "",
					"reference": "<p>https://datatracker.ietf.org/doc/html/rfc7234</p><p>https://datatracker.ietf.org/doc/html/rfc7231</p><p>https://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html</p>",
					"cweid": "524",
					"wascid": "13",
					"sourceid": "6"
				}
			]
		}
	],
	"sequences":[
	]

}
